{"version":3,"sources":["components/PickedColor.js","components/ColorPicker.js","index.js"],"names":["PickedColor","_ref","hue","saturation","lightness","divStyle","backgroundColor","concat","width","height","display","react_default","a","createElement","className","style","type","onChange","value","ColorPicker","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateCanvas","c","canvas","getContext","fillStyle","fillRect","x","y","onSelect","e","posX","pageX","offsetLeft","posY","pageY","offsetTop","s","l","setState","pickedColor","h","state","_this2","ref","elem","onClick","PickedColor_PickedColor","Component","ReactDOM","render","src_components_ColorPicker","document","getElementById"],"mappings":"6NAIe,SAASA,EAATC,GAAqD,IAA9BC,EAA8BD,EAA9BC,IAAKC,EAAyBF,EAAzBE,WAAYC,EAAaH,EAAbG,UAC/CC,EAAW,CACfC,gBAAe,OAAAC,OAASL,EAAT,MAAAK,OAAiBJ,EAAjB,OAAAI,OAAiCH,EAAjC,MACfI,MAAO,QACPC,OAAQ,OACRC,QAAS,gBAGX,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAW,iBAAkBC,MAAOV,IAEzCM,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,SAAOG,KAAK,OAAOC,SAAU,aAC1BC,MAAK,OAAAX,OAASL,EAAT,OAAAK,OAAkBJ,EAAlB,OAAAI,OAAkCH,EAAlC,cC4DDe,cAzEb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAYRQ,aAAe,WACb,IAAIC,EAAiBR,EAAKS,OAAOC,WAAW,MAC5CV,EAAKS,OAAOtB,MAAS,IACrBa,EAAKS,OAAOrB,OAAS,IAErB,IAAID,EAASa,EAAKS,OAAOtB,MACrBC,EAASY,EAAKS,OAAOrB,OAEzBoB,EAAEG,UAAY,eAEdH,EAAEI,SAAS,EAAG,EAAGzB,EAAOC,GAExB,IAAK,IAAIyB,EAAIzB,EAAS,EAAGyB,GAAK,EAAGA,IAC/B,IAAK,IAAIC,EAAI,EAAGA,EAAI3B,EAAO2B,IACzBN,EAAEG,UAAY,UAAoBE,EAAI,MAAQC,EAAI,KAClDN,EAAEI,SAASC,EAAGzB,EAAS,EAAI0B,EAAG,EAAG,IA5BpBd,EAiCnBe,SAAW,SAACC,GACV,IAAMC,EAAOD,EAAEE,MAAQlB,EAAKS,OAAOU,WAC7BC,EAAOJ,EAAEK,MAAQrB,EAAKS,OAAOa,UAGnC,KAAIL,EAAO,GAAKG,EAAO,GAAvB,CAEA,IACMG,EAAIN,EACJO,EAAI,IAAMJ,EAEhBpB,EAAKyB,SAAS,iBAAO,CACnBC,YAAa,CACXC,EANM,EAMHJ,IAAGC,UA3CVxB,EAAKS,OAAS,KACdT,EAAK4B,MAAS,CACZF,YAAa,CAAEC,EAAG,EAAGJ,EAAG,EAAGC,EAAG,IALfxB,mFAUjBG,KAAKI,gDAyCE,IAAAsB,EAAA1B,KACCuB,EAAgBvB,KAAKyB,MAArBF,YAER,OACEpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAEbH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,UAAQsC,IAAK,SAACC,GAAD,OAAUF,EAAKpB,OAASsB,GAC7BC,QAAS,SAAChB,GAAD,OAAOa,EAAKd,SAASC,OAGxC1B,EAAAC,EAAAC,cAACyC,EAAD,CAAapD,IAAK6C,EAAYC,EACjB7C,WAAY4C,EAAYH,EACxBxC,UAAW2C,EAAYF,aAnEpBU,aCA1BC,IAASC,OAAO9C,EAAAC,EAAAC,cAAC6C,EAAD,MAAgBC,SAASC,eAAe","file":"static/js/main.ed165736.chunk.js","sourcesContent":["import React from 'react';\r\nimport './PickedColor.css';\r\n\r\n\r\nexport default function PickedColor({ hue, saturation, lightness }) {\r\n  const divStyle = {\r\n    backgroundColor: `hsl(${hue}, ${saturation}%, ${lightness}%)`,\r\n    width: '100px',\r\n    height: '50px',\r\n    display: 'inline-block'\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={'pickedColorBox'} style={divStyle}></div>\r\n\r\n      <form>\r\n        <input type=\"text\" onChange={() => {\r\n        }} value={`hsl(${hue}%, ${saturation}%, ${lightness}%)`}/>\r\n      </form>\r\n    </div>\r\n  )\r\n};\r\n","import React, { Component } from 'react';\r\nimport './ColorPicker.css';\r\nimport PickedColor from './PickedColor'\r\n\r\nclass ColorPicker extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.canvas = null;\r\n    this.state  = {\r\n      pickedColor: { h: 0, s: 0, l: 0 }\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updateCanvas();\r\n  }\r\n\r\n  updateCanvas = () => {\r\n    let c              = this.canvas.getContext(\"2d\");\r\n    this.canvas.width  = 101;\r\n    this.canvas.height = 101;\r\n\r\n    let width  = this.canvas.width;\r\n    let height = this.canvas.height;\r\n\r\n    c.fillStyle = \"rgb(0, 0, 0)\";\r\n\r\n    c.fillRect(0, 0, width, height);\r\n\r\n    for (let x = height - 1; x >= 0; x--) {\r\n      for (let y = 0; y < width; y++) {\r\n        c.fillStyle = \"hsl(\" + 0 + \", \" + x + \"%, \" + y + \"%)\";\r\n        c.fillRect(x, height - 1 - y, 1, 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  onSelect = (e) => {\r\n    const posX = e.pageX - this.canvas.offsetLeft;\r\n    const posY = e.pageY - this.canvas.offsetTop;\r\n\r\n    // ignore mouse clicks on border of canvas\r\n    if (posX < 0 || posY < 0) return;\r\n\r\n    const h = 0;\r\n    const s = posX;\r\n    const l = 100 - posY;\r\n\r\n    this.setState(() => ({\r\n      pickedColor: {\r\n        h, s, l\r\n      }\r\n    }))\r\n  };\r\n\r\n  render() {\r\n    const { pickedColor } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"picker\">\r\n\r\n          <h1>Color Picker</h1>\r\n          <div className=\"canvas-wrapper\">\r\n            <canvas ref={(elem) => this.canvas = elem}\r\n                    onClick={(e) => this.onSelect(e)}/>\r\n          </div>\r\n\r\n          <PickedColor hue={pickedColor.h}\r\n                       saturation={pickedColor.s}\r\n                       lightness={pickedColor.l}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColorPicker;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ColorPicker from './components/ColorPicker';\r\n\r\nReactDOM.render(<ColorPicker/>, document.getElementById('root'));\r\n"],"sourceRoot":""}